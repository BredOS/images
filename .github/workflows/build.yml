name: Build Images

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [self-hosted, ARM64, BredOS]

    strategy:
      matrix:
        image: [nova-image, rock5c-image]

    steps:
      - name: Checkout Images
        uses: actions/checkout@v4
        with:
          path: images

      - name: Checkout mkimage
        uses: actions/checkout@v4
        with:
          repository: BredOS/mkimage
          path: mkimage

      - name: Install dependencies
        run: |
          sudo pacman -Sy --noconfirm --needed \
          python python-prettytable parted btrfs-progs \
          git wget arch-install-scripts unzip

      - name: Build Image
        run: |
          sudo python mkimage/mkimage.py -c images/${{ matrix.image }} -w ./work -o ./out

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: images-${{ matrix.image }}
          path: out/*.img.xz
          retention-days: 7

      - name: Cleanup
        run: |
          sudo rm -rf ./out
          sudo rm -rf ./work

  release:
    needs: build
    runs-on: [self-hosted, ARM64, BredOS]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        run: |
          # Fetch the list of artifacts using GitHub's REST API
          ARTIFACTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          # Extract artifact names and IDs
          echo "$ARTIFACTS" | jq -r '.artifacts[] | .name + " " + (.id|tostring)' | while read -r ARTIFACT_NAME ARTIFACT_ID; do
            echo "Downloading $ARTIFACT_NAME"
            curl -s -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip" \
              --output "$ARTIFACT_NAME.zip"
          done

          # Extract artifacts
          for artifact in *.zip; do
            unzip -q "$artifact" -d "${artifact%.zip}"
          done
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **.img.xz
          tag_name: $(date +'%Y-%m-%d')
          draft: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
